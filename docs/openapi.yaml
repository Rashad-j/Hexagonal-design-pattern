openapi: 3.0.0
info:
  title: Device Management API
  description: A RESTful API for managing devices.
  version: 1.0.0
servers:
  - url: http://localhost:8080/v1
    description: Local development server

paths:
  /devices:
    get:
      summary: List all devices
      operationId: listDevices
      responses:
        '200':
          description: A list of devices.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
    post:
      summary: Add a new device
      operationId: addDevice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceInput'
      responses:
        '201':
          description: Device created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'

  /devices/{id}:
    get:
      summary: Get a device by ID
      operationId: getDevice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A single device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '404':
          description: Device not found
    put:
      summary: Update a device
      operationId: updateDevice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceInput'
      responses:
        '200':
          description: Device updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
    delete:
      summary: Delete a device
      operationId: deleteDevice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Device deleted successfully

  /devices/search:
    get:
      summary: Search for devices by brand
      operationId: searchByBrand
      parameters:
        - name: brand
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of devices matching the search
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'

components:
  schemas:
    Device:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        brand:
          type: string
        created_at:
          type: string
          format: date-time
      required:
        - id
        - name
        - brand
        - created_at

    DeviceInput:
      type: object
      properties:
        name:
          type: string
        brand:
          type: string
      required:
        - name
        - brand
